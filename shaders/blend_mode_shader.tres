[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://dibatkmjefyc2"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_em0d2"]
output_port_for_preview = 0
source = 1

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_1rkey"]
operator = 7

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_tned2"]
source = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_pnk3r"]
input_name = "screen_uv"

[resource]
code = "shader_type canvas_item;
uniform sampler2D screen_tex_frg_10 : hint_screen_texture;



void fragment() {
// Input:8
	vec2 n_out8p0 = SCREEN_UV;


	vec4 n_out10p0;
// Texture2D:10
	n_out10p0 = texture(screen_tex_frg_10, n_out8p0);


	vec4 n_out5p0;
// Texture2D:5
	n_out5p0 = texture(TEXTURE, UV);


	vec3 n_out2p0;
// ColorOp:2
	{
		float base = vec3(n_out10p0.xyz).x;
		float blend = vec3(n_out5p0.xyz).x;
		if (base < 0.5) {
			n_out2p0.x = (base * (blend + 0.5));
		} else {
			n_out2p0.x = (1.0 - (1.0 - base) * (1.0 - (blend - 0.5)));
		}
	}
	{
		float base = vec3(n_out10p0.xyz).y;
		float blend = vec3(n_out5p0.xyz).y;
		if (base < 0.5) {
			n_out2p0.y = (base * (blend + 0.5));
		} else {
			n_out2p0.y = (1.0 - (1.0 - base) * (1.0 - (blend - 0.5)));
		}
	}
	{
		float base = vec3(n_out10p0.xyz).z;
		float blend = vec3(n_out5p0.xyz).z;
		if (base < 0.5) {
			n_out2p0.z = (base * (blend + 0.5));
		} else {
			n_out2p0.z = (1.0 - (1.0 - base) * (1.0 - (blend - 0.5)));
		}
	}


// Output:0
	COLOR.rgb = n_out2p0;


}
"
graph_offset = Vector2(-181.792, -145.521)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(2500, 120)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorOp_1rkey")
nodes/fragment/2/position = Vector2(1940, 80)
nodes/fragment/5/node = SubResource("VisualShaderNodeTexture_tned2")
nodes/fragment/5/position = Vector2(1100, 700)
nodes/fragment/8/node = SubResource("VisualShaderNodeInput_pnk3r")
nodes/fragment/8/position = Vector2(400, 240)
nodes/fragment/10/node = SubResource("VisualShaderNodeTexture_em0d2")
nodes/fragment/10/position = Vector2(1160, 0)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 10, 0, 2, 0, 8, 0, 10, 0, 5, 0, 2, 1)
