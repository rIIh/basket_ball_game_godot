[gd_resource type="VisualShader" load_steps=14 format=3 uid="uid://dwx1h8lq74xgk"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_083os"]
output_port_for_preview = 0
size = Vector2(1118.01, 527.513)
expression = "value = noise(uv * scale);"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_fj72f"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(10, 10)]
op_type = 0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_jfxi5"]
default_input_values = [0, 0.0, 1, 200.0]
operator = 3

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_ygldw"]
parameter_name = "distor_scale"
default_value_enabled = true
default_value = 200.0

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_oo11o"]
op_type = 0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_xsnls"]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_5vhgh"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_n4pbv"]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_15fid"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(2.08165e-12, 2.08165e-12)]
op_type = 0

[sub_resource type="VisualShaderNodeGlobalExpression" id="VisualShaderNodeGlobalExpression_2wutc"]
size = Vector2(1190.21, 802.694)
expression = "vec2 random(vec2 uv){
    uv = vec2( dot(uv, vec2(127.1,311.7) ),
               dot(uv, vec2(269.5,183.3) ) );
    return -1.0 + 2.0 * fract(sin(uv) * 43758.5453123);
}

float noise(vec2 uv) {
    vec2 uv_index = floor(uv);
    vec2 uv_fract = fract(uv);

    vec2 blur = smoothstep(0.0, 1.0, uv_fract);

    return mix( mix( dot( random(uv_index + vec2(0.0,0.0) ), uv_fract - vec2(0.0,0.0) ),
                     dot( random(uv_index + vec2(1.0,0.0) ), uv_fract - vec2(1.0,0.0) ), blur.x),
                mix( dot( random(uv_index + vec2(0.0,1.0) ), uv_fract - vec2(0.0,1.0) ),
                     dot( random(uv_index + vec2(1.0,1.0) ), uv_fract - vec2(1.0,1.0) ), blur.x), blur.y) + 0.5;
}"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_ru3m5"]
output_port_for_preview = 0
size = Vector2(1118.01, 527.513)
expression = "value = noise(uv * scale);"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_w420g"]
parameter_name = "noise_scale"
default_value_enabled = true
default_value = 250.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_q0q05"]
default_input_values = [0, 0.0, 1, 200.0]
operator = 3

[resource]
code = "shader_type canvas_item;
uniform float noise_scale = 250;
uniform float distor_scale = 200;


// GlobalExpression:0
	vec2 random(vec2 uv){
	    uv = vec2( dot(uv, vec2(127.1,311.7) ),
	               dot(uv, vec2(269.5,183.3) ) );
	    return -1.0 + 2.0 * fract(sin(uv) * 43758.5453123);
	}
	
	float noise(vec2 uv) {
	    vec2 uv_index = floor(uv);
	    vec2 uv_fract = fract(uv);
	
	    vec2 blur = smoothstep(0.0, 1.0, uv_fract);
	
	    return mix( mix( dot( random(uv_index + vec2(0.0,0.0) ), uv_fract - vec2(0.0,0.0) ),
	                     dot( random(uv_index + vec2(1.0,0.0) ), uv_fract - vec2(1.0,0.0) ), blur.x),
	                mix( dot( random(uv_index + vec2(0.0,1.0) ), uv_fract - vec2(0.0,1.0) ),
	                     dot( random(uv_index + vec2(1.0,1.0) ), uv_fract - vec2(1.0,1.0) ), blur.x), blur.y) + 0.5;
	}

void fragment() {
// Input:4
	vec2 n_out4p0 = UV;


// FloatParameter:8
	float n_out8p0 = noise_scale;


	float n_out7p0;
// Expression:7
	n_out7p0 = 0.0;
	{
		n_out7p0 = noise(n_out4p0 * n_out8p0);
	}


// FloatParameter:13
	float n_out13p0 = distor_scale;


// FloatOp:9
	float n_out9p0 = n_out7p0 / n_out13p0;


// VectorOp:11
	vec2 n_in11p1 = vec2(10.00000, 10.00000);
	vec2 n_out11p0 = n_out4p0 + n_in11p1;


	float n_out10p0;
// Expression:10
	n_out10p0 = 0.0;
	{
		n_out10p0 = noise(n_out11p0 * n_out8p0);
	}


// FloatOp:12
	float n_out12p0 = n_out10p0 / n_out13p0;


// VectorCompose:14
	vec2 n_out14p0 = vec2(n_out9p0, n_out12p0);


// VectorOp:5
	vec2 n_out5p0 = n_out4p0 + n_out14p0;


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(TEXTURE, n_out5p0);
	float n_out3p4 = n_out3p0.a;


// Output:0
	COLOR.rgb = vec3(n_out3p0.xyz);
	COLOR.a = n_out3p4;


}
"
graph_offset = Vector2(-953.327, -99.505)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1280, 100)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_xsnls")
nodes/fragment/2/position = Vector2(40, 180)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_5vhgh")
nodes/fragment/3/position = Vector2(580, -60)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_n4pbv")
nodes/fragment/4/position = Vector2(-4460, 20)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorOp_15fid")
nodes/fragment/5/position = Vector2(180, -120)
nodes/fragment/6/node = SubResource("VisualShaderNodeGlobalExpression_2wutc")
nodes/fragment/6/position = Vector2(-2380, -1000)
nodes/fragment/6/size = Vector2(1190.21, 802.694)
nodes/fragment/6/input_ports = ""
nodes/fragment/6/output_ports = ""
nodes/fragment/6/expression = "vec2 random(vec2 uv){
    uv = vec2( dot(uv, vec2(127.1,311.7) ),
               dot(uv, vec2(269.5,183.3) ) );
    return -1.0 + 2.0 * fract(sin(uv) * 43758.5453123);
}

float noise(vec2 uv) {
    vec2 uv_index = floor(uv);
    vec2 uv_fract = fract(uv);

    vec2 blur = smoothstep(0.0, 1.0, uv_fract);

    return mix( mix( dot( random(uv_index + vec2(0.0,0.0) ), uv_fract - vec2(0.0,0.0) ),
                     dot( random(uv_index + vec2(1.0,0.0) ), uv_fract - vec2(1.0,0.0) ), blur.x),
                mix( dot( random(uv_index + vec2(0.0,1.0) ), uv_fract - vec2(0.0,1.0) ),
                     dot( random(uv_index + vec2(1.0,1.0) ), uv_fract - vec2(1.0,1.0) ), blur.x), blur.y) + 0.5;
}"
nodes/fragment/7/node = SubResource("VisualShaderNodeExpression_ru3m5")
nodes/fragment/7/position = Vector2(-2580, 40)
nodes/fragment/7/size = Vector2(1118.01, 527.513)
nodes/fragment/7/input_ports = "0,3,uv;1,0,scale;"
nodes/fragment/7/output_ports = "0,0,value;"
nodes/fragment/7/expression = "value = noise(uv * scale);"
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatParameter_w420g")
nodes/fragment/8/position = Vector2(-3420, 240)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatOp_q0q05")
nodes/fragment/9/position = Vector2(-740, 420)
nodes/fragment/10/node = SubResource("VisualShaderNodeExpression_083os")
nodes/fragment/10/position = Vector2(-2580, 740)
nodes/fragment/10/size = Vector2(1118.01, 527.513)
nodes/fragment/10/input_ports = "0,3,uv;1,0,scale;"
nodes/fragment/10/output_ports = "0,0,value;"
nodes/fragment/10/expression = "value = noise(uv * scale);"
nodes/fragment/11/node = SubResource("VisualShaderNodeVectorOp_fj72f")
nodes/fragment/11/position = Vector2(-3760, 340)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatOp_jfxi5")
nodes/fragment/12/position = Vector2(-760, 660)
nodes/fragment/13/node = SubResource("VisualShaderNodeFloatParameter_ygldw")
nodes/fragment/13/position = Vector2(-1420, 960)
nodes/fragment/14/node = SubResource("VisualShaderNodeVectorCompose_oo11o")
nodes/fragment/14/position = Vector2(-360, 580)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 3, 0, 0, 0, 3, 4, 0, 1, 4, 0, 5, 0, 5, 0, 3, 0, 4, 0, 7, 0, 8, 0, 7, 1, 7, 0, 9, 0, 8, 0, 10, 1, 4, 0, 11, 0, 11, 0, 10, 0, 10, 0, 12, 0, 13, 0, 12, 1, 13, 0, 9, 1, 9, 0, 14, 0, 12, 0, 14, 1, 14, 0, 5, 1)
